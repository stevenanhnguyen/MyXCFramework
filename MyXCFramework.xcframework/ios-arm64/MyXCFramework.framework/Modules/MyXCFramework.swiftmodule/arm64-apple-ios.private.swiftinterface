// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7 (swiftlang-5.7.0.127.4 clang-1400.0.29.50)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name MyXCFramework
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
@_exported import MyXCFramework
import Swift
import _Concurrency
import _StringProcessing
public enum HTTPMethod : Swift.String {
  case get
  case post
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
@_hasMissingDesignatedInitializers public class APIManager {
  public static let shared: MyXCFramework.APIManager
  public func sendRequest(url: Swift.String, method: MyXCFramework.HTTPMethod, parameters: [Swift.String : Any]?, completion: @escaping (Foundation.Data?, Swift.Error?) -> Swift.Void)
  @objc deinit
}
public class UserAuthentication {
  public init()
  public func login(username: Swift.String, password: Swift.String, completion: @escaping (Swift.Bool, Swift.Error?) -> Swift.Void)
  public func register(username: Swift.String, password: Swift.String, completion: @escaping (Swift.Bool, Swift.Error?) -> Swift.Void)
  public func forgotPassword(email: Swift.String, completion: @escaping (Swift.Bool, Swift.Error?) -> Swift.Void)
  public func logout(completion: @escaping (Swift.Bool, Swift.Error?) -> Swift.Void)
  @objc deinit
}
extension MyXCFramework.HTTPMethod : Swift.Equatable {}
extension MyXCFramework.HTTPMethod : Swift.Hashable {}
extension MyXCFramework.HTTPMethod : Swift.RawRepresentable {}
