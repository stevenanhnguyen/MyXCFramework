// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7 (swiftlang-5.7.0.127.4 clang-1400.0.29.50)
// swift-module-flags: -target x86_64-apple-ios10.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name MyXCFramework
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
@_exported import MyXCFramework
import Swift
import _Concurrency
import _StringProcessing
public struct LoginResponse : Swift.Decodable {
  public init(from decoder: Swift.Decoder) throws
}
public class UserAuthenClass {
  public init()
  public func login(email: Swift.String, password: Swift.String, completion: @escaping (MyXCFramework.LoginResponse?, MyXCFramework.APIError?) -> Swift.Void)
  @objc deinit
}
public enum APIPath : Swift.String {
  case login
  case register
  case unknown
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public struct AuthenticationToken {
}
public enum AuthenticationError : Swift.Error {
}
public enum APIError : Swift.Error {
  case invalidURL
  case networkError(Swift.Error)
  case invalidRequest
  case invalidResponse
}
extension MyXCFramework.APIPath : Swift.Equatable {}
extension MyXCFramework.APIPath : Swift.Hashable {}
extension MyXCFramework.APIPath : Swift.RawRepresentable {}
